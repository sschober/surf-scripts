#!/usr/bin/env rc
#!/opt/plan9/bin/rc -x

p=$1	# property to read/select
q=$2	# property to set
xid=$3	# winid


uri=`{xprop -id $xid _SURF_URI | cut -d '"' -f 2}
kw=`{xprop -id $xid _SURF_FIND | cut -d '"' -f 2}

bmarks=$HOME/.surf/bookmarks.txt
logfile=$HOME/.surf/surf.rc.log

fn log {
  echo $* >> $logfile
}

fn s_xprop {
	if(test -n $2) xprop -id $xid -f $1 8s -set $1 $2
}

fn s_write_f {
  if(test -n $2){
    log $1 ' <- ' $2
    echo $2 >> $1
  }
}

log surf.rc $1 $2 $3

switch($p) {
  case _SURF_BMARK
	log s_write_f $bmarks $uri
	s_write_f $bmarks $uri
	sort -u -o $bmarks $bmarks

  case _SURF_FIND
	ret=`{echo $kw | dmenu -e $xid -p 'find:'}
	log s_xprop $q $ret
	s_xprop $q $ret

  case _SURF_URI
	sel=`{tac $bmarks >[2] /dev/null | dmenu -e $xid -p 'uri [dgtwy*]:'}
	if(test -z $"sel){
	  log No selection: $sel. Exiting.
	  exit
	}
	log dmenu: $sel
	# if only one argument given interpret it as an uri
	if(test $#sel -gt 1) {
	  what=$sel(2-)
	  switch($sel(1)){
	    case d # del.icio.us
		  ret='http://del.icio.us/save?url='^$"what
	    case g # google for it
		  ret='http://www.google.com/search?q='^$"what
	    case t # tinyurl
		  ret='http://tinyurl.com/create.php?url='^$"what
	    case w # wikipedia
		  ret='http://wikipedia.org/wiki/'^$"what
	    case y # youtube
		  ret='http://www.youtube.com/results?search_query='^$"what
	    case *
		  ret='http://www.google.com/search?q='^$"sel
	  }
	}
	if not ret=$sel

	log s_xprop $q $ret
	s_xprop $q $ret
}
